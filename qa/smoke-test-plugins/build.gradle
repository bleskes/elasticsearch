/*
 * ELASTICSEARCH CONFIDENTIAL
 * __________________
 *
 *  [2014] Elasticsearch Incorporated. All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Elasticsearch Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Elasticsearch Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Elasticsearch Incorporated.
 */

import org.elasticsearch.gradle.MavenFilteringHack

apply plugin: 'elasticsearch.standalone-rest-test'
apply plugin: 'elasticsearch.rest-test'

dependencies {
  testCompile project(path: ':x-pack:elasticsearch', configuration: 'runtime')
}

ext.pluginsCount = 1 // we install xpack explicitly
project.rootProject.subprojects.findAll { it.path.startsWith(':plugins:') }.each { subproj ->
  // need to get a non-decorated project object, so must re-lookup the project by path
  integTest.cluster.plugin(subproj.path)
  pluginsCount += 1
}

integTest {
  cluster {
    plugin ':x-pack:elasticsearch'

    setupCommand 'setupDummyUser',
                 'bin/x-pack/users', 'useradd', 'test_user', '-p', 'changeme', '-r', 'superuser'
    waitCondition = { node, ant ->
      File tmpFile = new File(node.cwd, 'wait.success')
      ant.get(src: "http://${node.httpUri()}",
              dest: tmpFile.toString(),
              username: 'test_user',
              password: 'changeme',
              ignoreerrors: true,
              retries: 10)
      return tmpFile.exists()
    }
  }
}

ext.expansions = [
  'expected.plugins.count': pluginsCount
]

processTestResources {
  inputs.properties(expansions)
  MavenFilteringHack.filter(it, expansions)
}
