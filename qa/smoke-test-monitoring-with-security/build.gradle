/*
 * ELASTICSEARCH CONFIDENTIAL
 * __________________
 *
 *  [2014] Elasticsearch Incorporated. All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Elasticsearch Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Elasticsearch Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Elasticsearch Incorporated.
 */

//
//
// This smoke test divides into two separate Monitoring smoke tests with Security in order to avoid
// an inherent and unrealistic race condition that exists between the teardown and relaunch of the
// two separate tests.
//
// Due to the teardown of REST suites, it removes all templates and indices to start fresh for any
// other indices. This can cause the monitoring agent to attempt to recreate them, which can get
// waiting for the timeout, which causes tests to fail in a racey way.
//
// An alternative to separating the smoke tests would be to add a way to stop/start the agent via
// a REST API.
//
//

subprojects {
  apply plugin: 'elasticsearch.standalone-rest-test'
  apply plugin: 'elasticsearch.rest-test'

  dependencies {
    testCompile project(path: ':x-pack-elasticsearch:plugin', configuration: 'runtime')
  }

  // bring in monitoring rest test suite
  task copyMonitoringRestTests(type: Copy) {
    into project.sourceSets.test.output.resourcesDir
    from project(':x-pack-elasticsearch:plugin').sourceSets.test.resources.srcDirs
    include 'rest-api-spec/test/monitoring/**'
  }

  integTest {
    dependsOn copyMonitoringRestTests
  }

  integTestCluster {
    systemProperty 'es.logger.level', 'TRACE'
    plugin ':x-pack-elasticsearch:plugin'
    setting 'xpack.monitoring.collection.interval', '3s'
    extraConfigFile 'x-pack/roles.yml', '../roles.yml'
    setupCommand 'setupTestAdminUser',
                 'bin/x-pack/users', 'useradd', 'test_admin', '-p', 'changeme', '-r', 'superuser'
    setupCommand 'setupMonitoredSystemUser',
                 'bin/x-pack/users', 'useradd', 'monitoring_system', '-p', 'changeme', '-r', 'monitoring_system,monitoring_without_bulk'
    setupCommand 'setupPowerlessUser',
                 'bin/x-pack/users', 'useradd', 'not_monitoring_system', '-p', 'changeme', '-r', 'monitoring_without_bulk'

    waitCondition = { node, ant ->
      File tmpFile = new File(node.cwd, 'wait.success')
      ant.get(src: "http://${node.httpUri()}",
              dest: tmpFile.toString(),
              username: 'test_admin',
              password: 'changeme',
              ignoreerrors: true,
              retries: 10)
      return tmpFile.exists()
    }
  }
}

/**
 * Allow {@code integTest} to be invoked on this project to run both Monitoring+Security smoke tests.
 */
task integTest {
  dependsOn subprojects.integTest
}
