/*
 * ELASTICSEARCH CONFIDENTIAL
 * __________________
 *
 *  [2014] Elasticsearch Incorporated. All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Elasticsearch Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Elasticsearch Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Elasticsearch Incorporated.
 */

apply plugin: 'elasticsearch.rest-test'

dependencies {
  testCompile project(path: ':x-plugins:elasticsearch', configuration: 'runtime')
}

// bring in watcher rest test suite
task copyWatcherRestTests(type: Copy) {
  into project.sourceSets.test.output.resourcesDir
  from project(':x-plugins:elasticsearch').sourceSets.test.resources.srcDirs
  include 'rest-api-spec/test/watcher/**'
}

integTest {
  dependsOn copyWatcherRestTests
  systemProperty 'tests.rest.blacklist',
    ['hijack/10_basic/*',
     'array_compare_watch/10_basic/Basic array_compare watch',
     'getting_started/10_monitor_cluster_health/Getting started - Monitor cluster health'].join(',')

  cluster {
    plugin ':x-plugins:elasticsearch'
    extraConfigFile 'x-pack/roles.yml', 'roles.yml'
    setupCommand 'setupTestAdminUser',
                 'bin/x-pack/users', 'useradd', 'test_admin', '-p', 'changeme', '-r', 'superuser'
    setupCommand 'setupWatcherManagerUser',
                 'bin/x-pack/users', 'useradd', 'watcher_manager', '-p', 'changeme', '-r', 'watcher_manager'
    setupCommand 'setupPowerlessUser',
                 'bin/x-pack/users', 'useradd', 'powerless_user', '-p', 'changeme', '-r', 'crappy_role'
    waitCondition = { node, ant ->
      File tmpFile = new File(node.cwd, 'wait.success')
      ant.get(src: "http://${node.httpUri()}",
              dest: tmpFile.toString(),
              username: 'test_admin',
              password: 'changeme',
              ignoreerrors: true,
              retries: 10)
      return tmpFile.exists()
    }
  }
}

