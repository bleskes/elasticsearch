<?xml version="1.0" encoding="UTF-8"?>
<project name="Ext GWT Desktop" default="build" basedir=".">
	<description>
        Build file for the Ext GWT Prelert desktop test application.
    </description>

	<!-- Set global properties for this build -->
	<property file="build.properties" />
	<property name="name" value="desktopapp"/>
	<property name="src" location="${project.basedir}/src" />
	<property name="src.war" location="${project.basedir}/war" />
	<property name="src.config" location="${project.basedir}/config" />
	<property name="build" location="${project.basedir}/build" />
	<property name="build.web.dir" value="${build}/war"/>

	<property name="gwt.entrypoint.class" value="demo.app.DesktopApp" />
	<property name="gwt.module.shortname" value="desktopapp" />
	<property name="gwt.sdk.location" location="C:\Tools\gwt-windows-1.7.0" />
	<property name="ext.gwt.sdk.location" location="C:\Tools\gxt-2.1.0" />

	<property name="code.drop.dir" value="${project.basedir}/guicode"/>
	
	<!-- GWT Compile Classpath -->
	<path id="gwt.compile.classpath">
		<pathelement location="${gwt.sdk.location}/gwt-user.jar" />
		<pathelement location="${gwt.sdk.location}/gwt-dev-windows.jar" />
		<pathelement location="${ext.gwt.sdk.location}/gxt.jar" />
		<pathelement location="C:\Tools\gwt-visualization-1.0.2\gwt-visualization.jar"/>
		<pathelement location="C:\Tools\gwt-incubator-july-14-2009.jar"/>
		<pathelement location="C:\Tools\gchart-2.6/gchart.jar" />
		<pathelement location="C:\Tools\gwt-diagrams-0.2\gwt-diagrams-0.2.jar" />
		<pathelement location="C:\Tools\chronoscope 0.85\chronoscope-0.85.jar" />
		<pathelement location="C:\Tools\chronoscope 0.85\gwtexporter-1.0.jar" />
		<pathelement location="${src}" />
	</path>
	
	
	<!-- Classpath to run in GWT hosted mode -->
	<path id="gwt.hosted.classpath">
		<pathelement location="${gwt.sdk.location}/gwt-user.jar" />
		<pathelement location="${gwt.sdk.location}/gwt-dev-windows.jar" />
		<pathelement location="${ext.gwt.sdk.location}/gxt.jar" />
		<pathelement location="C:\Tools\gwt-visualization-1.0.2\gwt-visualization.jar"/>
		<pathelement location="C:\Tools\gchart-2.6/gchart.jar" />
		<pathelement location="${src}" />
		<pathelement location="${src.war}/WEB-INF/classes" />
	</path>


	<!-- Classpath for server-side classes -->
	<path id="build.classpath">
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>

		<!-- GWT JARs -->
		<fileset dir="${gwt.sdk.location}">
			<include name="gwt-dev-windows.jar" />
			<include name="gwt-user.jar" />
		</fileset>
		<fileset dir="C:\Tools\gwt-visualization-1.0.2">
			<include name="gwt-visualization.jar" />
		</fileset>
		<fileset dir="C:\Tools\gwt-diagrams-0.2">
			<include name="gwt-diagrams-0.2.jar" />
		</fileset>
		<fileset file="C:\Tools\gwt-incubator-july-14-2009.jar"/>

		<!-- Ext GWT JARs -->
		<fileset dir="${ext.gwt.sdk.location}">
			<include name="gxt.jar" />
		</fileset>
		
		<!-- gchart JAR -->
		<fileset dir="C:\Tools\gchart-2.6">
			<include name="gchart.jar" />
		</fileset>
		
		<!-- JFreeChart JAR - Swing charting -->
		<fileset dir="C:\Tools\jfreechart-1.0.13\lib">
			<include name="jfreechart-1.0.13.jar" />
		</fileset>
		
		<!-- Apache log4j JAR -->
		<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
			<include name="log4j-1.2.15.jar" />
		</fileset>
		
		<!-- Apache POI JAR (API to access Microsoft file formats) -->
		<fileset dir="C:\Tools\poi-3.2-FINAL">
			<include name="poi-3.2-FINAL-20081019.jar" />
		</fileset>
		
		<!-- JARs required by Spring -->
		<fileset dir="C:\Tools\spring-framework-2.5.6\dist">
			<include name="spring.jar" />
		</fileset>
		<fileset dir="C:\Tools\spring-framework-2.5.6\dist\modules">
			<include name="spring-webmvc.jar" />
		</fileset>
		
		
		<fileset dir="C:\Tools\Jakarta\commons-dbcp-1.2.2">
			<include name="commons-dbcp-1.2.2.jar" />
		</fileset>
		<fileset dir="C:\Tools\jfreechart-1.0.13\lib">
			<include name="jcommon-1.0.16.jar" />
			<include name="jfreechart-1.0.13.jar" />
		</fileset>

	</path>


	<target name="gwt-compile" description="Compiles the GWT classes to generate static content">
		<!-- Compilation of the GWT classes to static content -->
		<echo message="Compiling the GWT classes to generate static content" />

		<mkdir dir="${build}/compiled_gwt" />

		<java failonerror="true" classpathref="gwt.compile.classpath" classname="com.google.gwt.dev.Compiler" fork="true">
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xss16M"/>
			<jvmarg value="-Xmx512M"/>
			<arg value="-war" />
			<arg value="${build}/compiled_gwt" />
			<arg value="${gwt.entrypoint.class}" />
		</java>
	</target>


	<target name="compile" description="compile the source">
		<!-- Compiles the Java source code -->
		<echo message="Compiling the classes for the Portal" />

		<mkdir dir="${src.war}/WEB-INF/classes"/>

		<javac srcdir="${src}" destdir="${src.war}/WEB-INF/classes" 
			encoding="utf-8" source="1.6" deprecation="off">
			<classpath>
				<path refid="build.classpath" />
			</classpath>
			<compilerarg value="-Xmaxerrs"/>
			<compilerarg value="250"/>
			<exclude name="demo/app/client/chart/ChronoscopeChartWindow.java"/>
			<exclude name="demo/app/client/chart/JFreeChartTestApp.java"/>
			<exclude name="demo/app/server/EpisodeGraphBuilder.java"/>
			<exclude name="demo/app/splash/**"/>
		</javac>
		
		<copy file="${src.config}/log4j.properties" todir="${src.war}/WEB-INF/classes" />
				
		<mkdir dir="${src.war}/WEB-INF/classes/config" />
		<copy file="${src.config}/views.xml" todir="${src.war}/WEB-INF/classes/config" />
		<copy file="${src.config}/views_cs.xml" todir="${src.war}/WEB-INF/classes/config" />
		<copy file="${src.config}/views_statestreet.xml" todir="${src.war}/WEB-INF/classes/config" />

	</target>
	
	
	<target name="build" depends="compile" description="Generate the distribution">
		<echo message="Building the desktop distribution" />

		<mkdir dir="${build.web.dir}" />

		<!-- Copy the GWT static content -->
		<copy todir="${build.web.dir}">
			<fileset dir="${src.war}">
				<include name="*.html" />
				<include name="DesktopApp.css" />
				<include name="prelert_icon.ico" />
			</fileset>
		</copy>
		<copy todir="${build.web.dir}/images">
			<fileset dir="${src.war}/images"/>
		</copy>

		<copy todir="${build.web.dir}/desktopapp">
			<fileset dir="${build}/compiled_gwt/desktopapp"/>
		</copy>
		
		<!-- Copy the gChart.gif file into the host page (DesktopApp.html) directory -->
		<copy file="${build}/compiled_gwt/desktopapp/gchart.gif" todir="${build.web.dir}"/>
		
		
		<!-- Copy the GXT and GWT components -->
		<copy todir="${build.web.dir}/desktopapp/gwt">
			<fileset dir="${src.war}/desktopapp/gwt"/>
		</copy>
		<copy todir="${build.web.dir}/desktopapp/gxt">
			<fileset dir="${src.war}/desktopapp/gxt"/>
		</copy>
		<copy todir="${build.web.dir}/desktopapp/images">
			<fileset dir="${src.war}/desktopapp/images"/>
		</copy>
		<copy todir="${build.web.dir}/desktopapp/desktop">
			<fileset dir="${src.war}/desktopapp/desktop"/>
		</copy>
		
		
		<!-- Copy the Prelert desktop class files to the WEB-INF/classes directory -->
		<mkdir dir="${build.web.dir}/WEB-INF/classes" />
		<copy todir="${build.web.dir}/WEB-INF/classes">
			<fileset dir="${src.war}/WEB-INF/classes">
				<include name="**/*.*" />
			</fileset>
		</copy>
		
		<!-- Copy in the contents of WEB-INF directory -->
		<copy todir="${build.web.dir}/WEB-INF">
			<fileset dir="${src.war}/WEB-INF">
				<include name="applicationContext.xml" />
				<include name="prelertGWT-servlet.xml" />
			</fileset>
		</copy>
		<copy file="${src.war}/WEB-INF/tomcat-web.xml" tofile="${build.web.dir}/WEB-INF/web.xml" />
		
		<copy file="${src.config}/log4j.properties" todir="${build.web.dir}/WEB-INF/classes" />
		
		
		<!-- Copy the necessary JARs to the WEB-INF/lib directory -->
		<copy todir="${build.web.dir}/WEB-INF/lib">

			<!-- GWT JARs -->
			<fileset dir="${gwt.sdk.location}">
				<include name="gwt-servlet.jar" />
			</fileset>

			<!-- Ext GWT JARs -->
			<fileset dir="${ext.gwt.sdk.location}">
				<include name="gxt.jar" />
				<include name="gxt-servlet.jar" />
			</fileset>
			
			<!-- log4j JAR -->
			<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
				<include name="log4j-1.2.15.jar" />
			</fileset>
			
			<!-- Apache Commons JARS -->
			<fileset dir="C:\Tools\Jakarta\commons-beanutils-1.8.0">
				<include name="commons-beanutils-core-1.8.0.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-dbcp-1.2.2">
				<include name="commons-dbcp-1.2.2.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-digester-2.0">
				<include name="commons-digester-2.0.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-logging-1.1.1">
				<include name="commons-logging-1.1.1.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-pool-1.4">
				<include name="commons-pool-1.4.jar" />
			</fileset>

			<!-- MySQL Connector -->
			<fileset dir="C:\Program Files\MySQL\mysql-connector-java-5.1.7">
				<include name="mysql-connector-java-5.1.7-bin.jar" />
			</fileset>
			
			<!-- Spring JARs -->
			<fileset dir="C:\Tools\spring-framework-2.5.6\dist">
				<include name="spring.jar" />
			</fileset>
			<fileset dir="C:\Tools\spring-framework-2.5.6\dist\modules">
				<include name="spring-webmvc.jar" />
			</fileset>
			
		</copy>
		
		<!-- Build the WAR file -->
		<jar jarfile="${build}/${name}.war" basedir="${build.web.dir}"  />

	</target>
	
	
	<target name="episodeViewer" description="Builds the Episode Graph Builder app">
		<echo message="Building the Episode Viewer application" />
		
		<mkdir dir="${build}/episodeViewer" />
		<mkdir dir="${build}/episodeViewer/classes"/>
		<mkdir dir="${build}/episodeViewer/config"/>
		<mkdir dir="${build}/episodeViewer/lib"/>

		<!-- Compile the Graph Builder classes -->
		<echo message="Compiling the classes for the Episode Graph Builder" />
		<javac srcdir="${src}" destdir="${build}/episodeViewer/classes" 
			encoding="utf-8" source="1.6" deprecation="off">
			<classpath>
				<path refid="build.classpath" />
				
				<!-- Batik JARs -->
				<fileset dir="C:\Tools\batik-1.7\lib">
					<include name="*.jar" />
				</fileset>
				
				<!-- JUNG JARs -->
				<fileset dir="C:\Tools\jung-2.0\lib">
					<include name="*.jar" />
				</fileset>
				
				<fileset dir="C:\Tools\Jakarta\commons-dbcp-1.2.2">
					<include name="commons-dbcp-1.2.2.jar" />
				</fileset>
				
			</classpath>
			<compilerarg value="-Xmaxerrs"/>
			<compilerarg value="250"/>
			<include name="demo/app/server/EpisodeGraphBuilder.java"/>
		</javac>
		
		<!-- Copy the config files and startup scripts -->
		<copy todir="${build}/episodeViewer">
			<fileset dir="${project.basedir}">
				<include name="episodeViewer.bat" />
				<include name="episodeViewer.sh" />
			</fileset>
		</copy>
		<copy todir="${build}/episodeViewer/config">
			<fileset dir="${src.config}">
				<include name="episode_viewer.properties" />
				<include name="log4j.properties" />
			</fileset>
		</copy>
		
		<!-- Copy the necessary JARs to the lib directory -->
		<copy todir="${build}/episodeViewer/lib">

			<!-- Batik JARs -->
			<fileset dir="C:\Tools\batik-1.7\lib">	
				<include name="batik-anim.jar" />
				<include name="batik-awt-util.jar" />
				<include name="batik-bridge.jar" />
				<include name="batik-codec.jar" />
				<include name="batik-css.jar" />
				<include name="batik-dom.jar" />
				<include name="batik-ext.jar" />
				<include name="batik-gvt.jar" />
				<include name="batik-parser.jar" />
				<include name="batik-script.jar" />
				<include name="batik-svg-dom.jar" />
				<include name="batik-svggen.jar" />
				<include name="batik-transcoder.jar" />
				<include name="batik-util.jar" />
				<include name="batik-xml.jar" />
				<include name="xml-apis-ext.jar" />
			</fileset>	
			
			<!-- JUNG JARs -->
			<fileset dir="C:\Tools\jung-2.0\lib">	
				<include name="jung-algorithms-2.0.jar" />
				<include name="jung-api-2.0.jar" />
				<include name="jung-graph-impl-2.0.jar" />
				<include name="collections-generic-4.01.jar" />
			</fileset>
			
			<!-- Apache Jakarta JARs -->
			<fileset dir="C:\Tools\Jakarta\commons-dbcp-1.2.2">
				<include name="commons-dbcp-1.2.2.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-logging-1.1.1">
				<include name="commons-logging-1.1.1.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-pool-1.4">
				<include name="commons-pool-1.4.jar" />
			</fileset>
			
			<!-- log4j JAR -->
			<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
				<include name="log4j-1.2.15.jar" />
			</fileset>
			
			<!-- MySQL Connector -->
			<fileset dir="C:\Program Files\MySQL\mysql-connector-java-5.1.7">
				<include name="mysql-connector-java-5.1.7-bin.jar" />
			</fileset>
			
			<!-- Spring JARs -->
			<fileset dir="C:\Tools\spring-framework-2.5.6\dist">
				<include name="spring.jar" />
			</fileset>
			
		</copy>
		
	</target>


	<target name="deploy" depends="build" description="Deploy application">
		<echo message="Deploying the test desktop application" />
		
		<delete dir="${deploy.path}/${name}"/>
		<copy file="${build}/${name}.war" todir="${deploy.path}"/>
	</target>

	
	<target name="undeploy" description="Un-deploy application">
		<delete>
			<fileset dir="${deploy.path}/${name}">
				<include name="**/*.*" />
			</fileset>
		</delete>
		<delete file="${build}/${name}.war"/>
	</target>

	
	<target name="hosted" description="Run hosted mode">  
		<echo message="Running the Prelert Desktop test application in hosted mode" />
		
		<!-- Copy the necessary JARs to the WEB-INF/lib directory -->
		<copy todir="${src.war}/WEB-INF/lib">

			<!-- GWT JARs -->
			<fileset dir="${gwt.sdk.location}">
				<include name="gwt-servlet.jar" />
			</fileset>

			<!-- Ext GWT JARs -->
			<fileset dir="${ext.gwt.sdk.location}">
				<include name="gxt.jar" />
				<include name="gxt-servlet.jar" />
			</fileset>
			
			<!-- log4j JAR -->
			<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
				<include name="log4j-1.2.15.jar" />
			</fileset>
			
			<!-- Apache Commons JARS -->
			<fileset dir="C:\Tools\Jakarta\commons-beanutils-1.8.0">
				<include name="commons-beanutils-core-1.8.0.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-dbcp-1.2.2">
				<include name="commons-dbcp-1.2.2.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-digester-2.0">
				<include name="commons-digester-2.0.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-logging-1.1.1">
				<include name="commons-logging-1.1.1.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-pool-1.4">
				<include name="commons-pool-1.4.jar" />
			</fileset>

			<!-- MySQL Connector -->
			<fileset dir="C:\Program Files\MySQL\mysql-connector-java-5.1.7">
				<include name="mysql-connector-java-5.1.7-bin.jar" />
			</fileset>
			
			<!-- Spring JARs -->
			<fileset dir="C:\Tools\spring-framework-2.5.6\dist">
				<include name="spring.jar" />
			</fileset>
			<fileset dir="C:\Tools\spring-framework-2.5.6\dist\modules">
				<include name="spring-webmvc.jar" />
			</fileset>
			
		</copy>
		
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.HostedMode">    
			<classpath>      
				<path refid="gwt.hosted.classpath" />
				<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
					<include name="log4j-1.2.15.jar" />
				</fileset>
			</classpath>    
			<jvmarg value="-Xmx512M"/>    
			<arg value="-startupUrl"/>    
			<arg value="DesktopApp.html"/>    
			<arg value="demo.app.DesktopApp"/>  
		</java>
	</target>
	
	
	<target name="clean" description="Clean .class files and GWT files from output directories">
		<delete>
			<fileset dir="${src.war}/WEB-INF/classes">
				<include name="**/*.class"/>
			</fileset>
		</delete>
		
		<delete failonerror="false">
			<fileset dir="${build}/compiled_gwt/${gwt.module.shortname}">
				<include name="**/*.*" />
			</fileset>
		</delete>
		
		<delete dir="${build.web.dir}"/>
		
	</target>
	
	
	<target name="build-gwt1.5" depends="compile" description="Generate the distribution">
		<echo message="Building the desktop distribution for GWT 1.5 " />

		<mkdir dir="${build.web.dir}/WEB-INF" />

		<!-- Copy the GWT static content -->
		<copy todir="${build.web.dir}">
			<fileset dir="${build}/compiled_gwt/desktopapp">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<!-- Copy the Prelert desktop class files to the WEB-INF/classes directory -->
		<mkdir dir="${build.web.dir}/WEB-INF/classes" />
		<copy todir="${build.web.dir}/WEB-INF/classes">
			<fileset dir="${build}/compiled_classes">
				<include name="**/*.*" />
			</fileset>
		</copy>


		<!-- Copy config files to the WEB-INF directory -->
		<copy todir="${build.web.dir}/WEB-INF">
			<fileset dir="${src.war}/WEB-INF">
				<include name="web.xml" />
				<include name="applicationContext.xml" />
				<include name="prelertGWT-servlet.xml" />
			</fileset>
		</copy>
		
		<copy file="${src.config}/log4j.properties" todir="${build.web.dir}/WEB-INF/classes" />

		<!-- Copy the necessary JARs to the WEB-INF/lib directory -->
		<copy todir="${build.web.dir}/WEB-INF/lib">

			<!-- GWT JARs -->
			<fileset dir="${gwt.sdk.location}">
				<include name="gwt-servlet.jar" />
			</fileset>

			<!-- Ext GWT JARs -->
			<fileset dir="${ext.gwt.sdk.location}">
				<include name="gxt.jar" />
				<include name="gxt-servlet.jar" />
			</fileset>
			
			<!-- log4j JAR -->
			<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
				<include name="log4j-1.2.15.jar" />
			</fileset>

			<!-- MySQL Connector -->
			<fileset dir="C:\Program Files\MySQL\mysql-connector-java-5.1.7">
				<include name="mysql-connector-java-5.1.7-bin.jar" />
			</fileset>
			
			<!-- Spring JARs -->
			<fileset dir="C:\Tools\spring-framework-2.5.6\dist">
				<include name="spring.jar" />
			</fileset>
			<fileset dir="C:\Tools\spring-framework-2.5.6\dist\modules">
				<include name="spring-webmvc.jar" />
			</fileset>
			<fileset dir="C:\Tools\spring-framework-2.5.6\lib\jakarta-commons">
				<include name="commons-dbcp.jar" />
				<include name="commons-logging.jar" />
				<include name="commons-pool.jar" />
			</fileset>
			
		</copy>

		<!-- Build the WAR file -->
		<jar jarfile="${build}/${name}.war"
			basedir="${build.web.dir}"  />

	</target>
	
	
	<target name="codedrop" description="Copies source code and associated files to single directory">
		<echo message="Copying source to single directory" />

		<mkdir dir="${code.drop.dir}" />
		<mkdir dir="${code.drop.dir}/config" />
		<mkdir dir="${code.drop.dir}/src" />
		<mkdir dir="${code.drop.dir}/war" />
		<mkdir dir="${code.drop.dir}/web" />
		
		<!-- Copy the build files -->
		<copy todir="${code.drop.dir}">
			<fileset dir="${project.basedir}">
				<include name="build.xml" />
				<include name="build.properties" />
			</fileset>
		</copy>
			
		<!-- Copy the config files -->
		<copy todir="${code.drop.dir}/config">
			<fileset dir="${src.config}">
				<include name="log4j.properties" />
			</fileset>
		</copy>
			
		<!-- Copy the Java source files -->
		<copy todir="${code.drop.dir}/src">
			<fileset dir="${src}">
				<include name="**/*.java" />
			</fileset>
		</copy>
		
		<!-- Copy the host html page and CSS stylesheet -->
		<copy file="${src}/demo/app/DesktopApp.gwt.xml" todir="${code.drop.dir}/src/demo/app"/>
		<copy todir="${code.drop.dir}/war">
			<fileset dir="${src.war}">
				<include name="DesktopApp.html"/>
				<include name="DesktopApp.css"/>
			</fileset>
		</copy>

		
		<!-- Copy the web files -->
		<copy todir="${code.drop.dir}/web/WEB-INF">
			<fileset dir="${src.war}/WEB-INF">
				<include name="*.xml" />
			</fileset>
		</copy>
		
	</target>

</project>
