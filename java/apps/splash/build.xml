<?xml version="1.0" encoding="UTF-8"?>
<project name="Splash msysgit" default="build" basedir=".">
	<description>
        Build file for the V3 Splash GUI protoype.
    </description>

	<!-- Set global properties for this build -->
	<property file="build.properties" />
	<property name="name" value="splash2"/>
	<property name="src" location="${source.basedir}/src" />
	<property name="src.war" location="${project.basedir}/war" />
	<property name="src.config" location="${project.basedir}/config" />
	<property name="build" location="${project.basedir}/build" />
	<property name="build.web.dir" value="${build}/war"/>

	<property name="gwt.entrypoint.class" value="com.prelert.Splash" />
	<property name="gwt.module.shortname" value="splash" />
	<property name="gwt.sdk.location" location="C:\Tools\gwt-2.1.1" />
	<property name="ext.gwt.sdk.location" location="C:\Tools\gxt-2.2.1" />

	<property name="code.drop.dir" value="${project.basedir}/backup"/>
	
	<!-- GWT Compile Classpath -->
	<path id="gwt.compile.classpath">
		<pathelement location="${gwt.sdk.location}/gwt-user.jar" />
		<pathelement location="${gwt.sdk.location}/gwt-dev.jar" />
		<pathelement location="${ext.gwt.sdk.location}/gxt.jar" />
		<pathelement location="${src}" />
		<pathelement location="C:\Tools\gchart-2.7/gchart.jar" />
		<pathelement location="C:\Tools\gwt-incubator-20100204-r1747.jar"/>
	</path>
	


	<!-- Classpath for server-side classes -->
	<path id="build.classpath">
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>

		<!-- GWT JARs -->
		<fileset dir="${gwt.sdk.location}">
			<include name="gwt-dev-windows.jar" />
			<include name="gwt-user.jar" />
		</fileset>

		<!-- Ext GWT JARs -->
		<fileset dir="${ext.gwt.sdk.location}">
			<include name="gxt.jar" />
		</fileset>
		
		<!-- Apache libraries -->
		<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
			<include name="log4j-1.2.15.jar" />
		</fileset>
		<fileset dir="C:\Tools\pdfbox-1.4.0">
			<include name="pdfbox-1.4.0.jar" />
		</fileset>
		
		<!-- JARs required by Spring -->
		<fileset dir="C:\Tools\spring-framework-3.0.5\dist">
			<include name="org.springframework.beans-3.0.5.RELEASE.jar" />
			<include name="org.springframework.context-3.0.5.RELEASE.jar" />
			<include name="org.springframework.core-3.0.5.RELEASE.jar" />
			<include name="org.springframework.jdbc-3.0.5.RELEASE.jar" />
			<include name="org.springframework.transaction-3.0.5.RELEASE.jar" />
			<include name="org.springframework.web-3.0.5.RELEASE.jar" />
			<include name="org.springframework.web.servlet-3.0.5.RELEASE.jar" />
		</fileset>
		
		
		<!-- JARs required by Spring Security-->
		<fileset dir="C:\Tools\spring-security-3.0.5.RELEASE\dist">
			<include name="spring-security-core-3.0.5.RELEASE.jar" />
		</fileset>
		
		
		<!-- Apache Commons JARS -->
		<!-- Can remove once PostgreSQL testing is complete -->
		<fileset dir="C:\Tools\Jakarta\commons-dbcp-1.4">
			<include name="commons-dbcp-1.4.jar" />
		</fileset>

	</path>
	
	
	<target name="init-eclipse-project" description="Copies over 3rd party files necessary to run application in Eclipse">
		<echo message="Initialising Eclipse project" />
		
		<!-- Copy the GXT components to the WAR direcory-->
		<mkdir dir="${src.war}/splash/gxt" />
		<copy todir="${src.war}/splash/gxt/css">
			<fileset dir="${ext.gwt.sdk.location}/resources/css"/>
		</copy>
		<copy todir="${src.war}/splash/gxt/images">
			<fileset dir="${ext.gwt.sdk.location}/resources/images"/>
		</copy>
		
		
		<!-- Copy the necessary JARs to the WEB-INF/lib directory -->
		<mkdir dir="${src.war}/WEB-INF/lib" />
		<copy todir="${src.war}/WEB-INF/lib">

			<!-- GWT JARs -->
			<fileset dir="${gwt.sdk.location}">
				<include name="gwt-servlet.jar" />
			</fileset>

			<!-- Ext GWT JARs -->
			<fileset dir="${ext.gwt.sdk.location}">
				<include name="gxt.jar" />
			</fileset>
			
			<!-- log4j JAR -->
			<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
				<include name="log4j-1.2.15.jar" />
			</fileset>
			
			<!-- Apache Commons JARS -->
			<fileset dir="C:\Tools\Jakarta\commons-dbcp-1.4">
				<include name="commons-dbcp-1.4.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-logging-1.1.1">
				<include name="commons-logging-1.1.1.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-pool-1.5.5">
				<include name="commons-pool-1.5.5.jar" />
			</fileset>

			<!-- MySQL Connector -->
			<fileset dir="C:\Program Files\MySQL\mysql-connector-java-5.1.12">
				<include name="mysql-connector-java-5.1.12-bin.jar" />
			</fileset>
			
			<!-- PostgreSQL driver -->
			<fileset dir="C:\Tools\psqlJDBC">
				<include name="postgresql-9.0-801.jdbc3.jar" />
			</fileset>
			
			<!-- Spring JARs -->
			<fileset dir="C:\Tools\spring-framework-3.0.5\dist">
				<include name="org.springframework.aop-3.0.5.RELEASE.jar" />
				<include name="org.springframework.asm-3.0.5.RELEASE.jar" />
				<include name="org.springframework.beans-3.0.5.RELEASE.jar" />
				<include name="org.springframework.context-3.0.5.RELEASE.jar" />
				<include name="org.springframework.core-3.0.5.RELEASE.jar" />
				<include name="org.springframework.expression-3.0.5.RELEASE.jar" />
				<include name="org.springframework.jdbc-3.0.5.RELEASE.jar" />
				<include name="org.springframework.transaction-3.0.5.RELEASE.jar" />
				<include name="org.springframework.web-3.0.5.RELEASE.jar" />
				<include name="org.springframework.web.servlet-3.0.5.RELEASE.jar" />
			</fileset>
			<fileset dir="C:\Tools\spring-framework-3.0.5\lib">
				<include name="aopalliance.jar" />
			</fileset>
			
			<!-- JSTL jars -->
			<fileset dir="C:\Tools\Jakarta\jakarta-taglibs-standard-1.1.2\lib">
				<include name="jstl.jar" />
				<include name="standard.jar" />
			</fileset>
			
		</copy>
			
	</target>


	<target name="gwt-compile" description="Compiles the GWT classes to generate static content">
		<!-- Compilation of the GWT classes to static content -->
		<echo message="Compiling the GWT classes to generate static content" />

		<mkdir dir="${build}/compiled_gwt" />

		<java failonerror="true" classpathref="gwt.compile.classpath" classname="com.google.gwt.dev.Compiler" fork="true">
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xss16M"/>
			<jvmarg value="-Xmx512M"/>
			<arg value="-war" />
			<arg value="${build}/compiled_gwt" />
			<arg value="${gwt.entrypoint.class}" />
		</java>
	</target>


	<target name="compile" description="compile the source">
		<!-- Compiles the Java source code -->
		<echo message="Compiling the server-side classes" />

		<mkdir dir="${src.war}/WEB-INF/classes"/>

		<javac srcdir="${src}" destdir="${src.war}/WEB-INF/classes" 
			encoding="utf-8" source="1.6" deprecation="off">
			<classpath>
				<path refid="build.classpath" />
			</classpath>
			<compilerarg value="-Xmaxerrs"/>
			<compilerarg value="250"/>
			
			<include name="com/prelert/dao/**"/>
			<include name="com/prelert/data/**"/>
			<include name="com/prelert/server/**"/>
			<include name="com/prelert/service/**"/>
			<include name="com/prelert/web/**"/>
			
		</javac>
		
		<copy todir="${src.war}/WEB-INF/classes">
			<fileset dir="${src.config}">
				<include name="*.properties" />
			</fileset>
		</copy>

	</target>
	
	
	<target name="build_common" depends="compile" 
		description="Builds the database-independent parts of the application">
		
		<echo message="Building the common components for the web application" />
		
		<mkdir dir="${build.web.dir}" />
		<mkdir dir="${build.web.dir}/WEB-INF/lib" />

		<!-- Copy the GWT static content -->
		<copy todir="${build.web.dir}">
			<fileset dir="${src.war}">
				<include name="*.jsp" />
				<include name="Splash.html" />
				<include name="Splash.css" />
				<include name="prelert_icon.ico" />
			</fileset>
		</copy>
		<copy todir="${build.web.dir}/css">
			<fileset dir="${src.war}/css"/>
		</copy>
		<copy todir="${build.web.dir}/images">
			<fileset dir="${src.war}/images"/>
		</copy>

		<copy todir="${build.web.dir}/splash">
			<fileset dir="${build}/compiled_gwt/splash"/>
		</copy>
		
		<!-- Copy the GXT and GWT components -->
		<copy todir="${build.web.dir}/splash/gwt">
			<fileset dir="${src.war}/splash/gwt"/>
		</copy>
		<copy todir="${build.web.dir}/splash/gxt/css">
			<fileset dir="${ext.gwt.sdk.location}/resources/css"/>
		</copy>
		<copy todir="${build.web.dir}/splash/gxt/images">
			<fileset dir="${ext.gwt.sdk.location}/resources/images"/>
		</copy>
		
		<!-- Copy the Spring bean definition file to the WEB-INF directory -->
		<copy todir="${build.web.dir}/WEB-INF">
			<fileset dir="${src.war}/WEB-INF">
				<include name="client.properties" />
				<include name="prelert-servlet.xml" />
			</fileset>
		</copy>
		
		<copy file="${src.war}/WEB-INF/tomcat-web.xml" tofile="${build.web.dir}/WEB-INF/web.xml" />
		
		<!-- JAR up the server-side classes -->
		<jar destfile="${build.web.dir}/WEB-INF/lib/${name}.jar" basedir="${src.war}/WEB-INF/classes"/>
		
		
		<!-- Copy the necessary JARs to the WEB-INF/lib directory -->
		<copy todir="${build.web.dir}/WEB-INF/lib">

			<!-- GWT JARs -->
			<fileset dir="${gwt.sdk.location}">
				<include name="gwt-servlet.jar" />
			</fileset>

			<!-- Ext GWT JARs -->
			<fileset dir="${ext.gwt.sdk.location}">
				<include name="gxt.jar" />
			</fileset>
			
			<!-- log4j JAR -->
			<fileset dir="C:\Tools\Jakarta\apache-log4j-1.2.15">
				<include name="log4j-1.2.15.jar" />
			</fileset>
			<fileset dir="C:\Tools\pdfbox-1.4.0">
				<include name="fontbox-1.4.0.jar" />
				<include name="pdfbox-1.4.0.jar" />
			</fileset>
			
			<!-- Apache Commons JARS -->
			<fileset dir="C:\Tools\Jakarta\commons-dbcp-1.4">
				<include name="commons-dbcp-1.4.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-logging-1.1.1">
				<include name="commons-logging-1.1.1.jar" />
			</fileset>
			<fileset dir="C:\Tools\Jakarta\commons-pool-1.5.5">
				<include name="commons-pool-1.5.5.jar" />
			</fileset>
			
			<!-- Spring JARs -->
			<fileset dir="C:\Tools\spring-framework-3.0.5\dist">
				<include name="org.springframework.aop-3.0.5.RELEASE.jar" />
				<include name="org.springframework.asm-3.0.5.RELEASE.jar" />
				<include name="org.springframework.beans-3.0.5.RELEASE.jar" />
				<include name="org.springframework.context-3.0.5.RELEASE.jar" />
				<include name="org.springframework.core-3.0.5.RELEASE.jar" />
				<include name="org.springframework.expression-3.0.5.RELEASE.jar" />
				<include name="org.springframework.jdbc-3.0.5.RELEASE.jar" />
				<include name="org.springframework.transaction-3.0.5.RELEASE.jar" />
				<include name="org.springframework.web-3.0.5.RELEASE.jar" />
				<include name="org.springframework.web.servlet-3.0.5.RELEASE.jar" />
			</fileset>
			<fileset dir="C:\Tools\spring-framework-3.0.5\lib">
				<include name="aopalliance.jar" />
			</fileset>
			
			<!-- Spring Security JARs -->
			<fileset dir="C:\Tools\spring-security-3.0.5.RELEASE/dist">
				<include name="spring-security-acl-3.0.5.RELEASE.jar" />
				<include name="spring-security-config-3.0.5.RELEASE.jar" />
				<include name="spring-security-core-3.0.5.RELEASE.jar" />
				<include name="spring-security-taglibs-3.0.5.RELEASE.jar" />
				<include name="spring-security-web-3.0.5.RELEASE.jar" />
			</fileset>
			
			<!-- JSTL jars -->
			<fileset dir="C:\Tools\Jakarta\jakarta-taglibs-standard-1.1.2\lib">
				<include name="jstl.jar" />
				<include name="standard.jar" />
			</fileset>
			
		</copy>
		
	</target>
	
	
	<target name="build" depends="build_common" 
		description="Generates the distribution for a PostgreSQL database">
		<echo message="Building the V3 Prelert GUI application for a PostgreSQL database" />

		
		<!-- Copy the Spring applicationContext.xml file -->
		<copy file="${src.war}/WEB-INF/applicationContext.xml" todir="${build.web.dir}/WEB-INF" />
		
		<copy todir="${build.web.dir}/WEB-INF/lib">
			
			<!-- PostgreSQL driver -->
			<fileset dir="C:\Tools\psqlJDBC">
				<include name="postgresql-9.0-801.jdbc3.jar" />
			</fileset>
		</copy>
		
		<!-- Build the WAR file -->
		<jar jarfile="${build}/${name}.war" basedir="${build.web.dir}" excludes="**/Thumbs.db" />

	</target>
	
	
	<target name="build_mysql" depends="build_common" 
		description="Generates the distribution for a MySQL database">
		<echo message="Building the V3 Prelert GUI application for a MySQL database" />
		
		<!-- Copy the Spring applicationContext.xml file -->
		<copy file="${src.war}/WEB-INF/applicationContextMySQL.xml" 
			tofile="${build.web.dir}/WEB-INF/applicationContext.xml" />

		<copy todir="${build.web.dir}/WEB-INF/lib">
			
			<!-- MySQL Connector -->
			<fileset dir="C:\Program Files\MySQL\mysql-connector-java-5.1.12">
				<include name="mysql-connector-java-5.1.12-bin.jar" />
			</fileset>
		</copy>
		
		<!-- Build the WAR file -->
		<jar jarfile="${build}/${name}.war" basedir="${build.web.dir}" excludes="**/Thumbs.db" />

	</target>
	

	<target name="deploy" depends="build" description="Deploys application for a PostgreSQL database">
		<echo message="Deploying the V3 Prelert GUI for a PostgreSQL database" />
		
		<!-- Copy the WAR file to the Tomcat webapps directory -->
		<delete dir="${deploy.path}/${name}"/>
		<copy file="${build}/${name}.war" todir="${deploy.path}"/>
		
		<!-- Copy the Tomcat context file -->
		<copy file="${src.config}/tomcat_context.xml" tofile="${appserver.home}/conf/Catalina/localhost/${name}.xml" 
				overwrite="true" />
	</target>
	
	
	<target name="deploy_mysql" depends="build_mysql" description="Deploys application for a MySQL database">
		<echo message="Deploying the V3 Prelert GUI for a MySQL database" />
		
		<!-- Copy the WAR file to the Tomcat webapps directory -->
		<delete dir="${deploy.path}/${name}"/>
		<copy file="${build}/${name}.war" todir="${deploy.path}"/>
		
		<!-- Copy the Tocat context file -->
		<copy file="${src.config}/tomcat_context_mysql.xml" tofile="${appserver.home}/conf/Catalina/localhost/${name}.xml" 
			overwrite="true" />
	</target>
	
	
	<target name="gwt-deploy" depends="gwt-compile, deploy" description="Deploys application fpr a PostgreSQL database">
		<echo message="Compiling GWT module and deploying the V3 Prelert GUI for a PostgreSQL database" />
		
	</target>

	
	<target name="undeploy" description="Un-deploy application">
		<delete>
			<fileset dir="${deploy.path}/${name}">
				<include name="**/*.*" />
			</fileset>
		</delete>
		<delete file="${build}/${name}.war"/>
	</target>

	
	<target name="clean" depends="clean-gwt" description="Clean .class files and GWT files from output directories">
		
		<!-- Delete the server-side classes -->
		<delete>
			<fileset dir="${src.war}/WEB-INF/classes">
				<include name="**/*.class"/>
			</fileset>
		</delete>
		
		<!-- Delete the GWT compilation output -->
		<delete failonerror="false">
			<fileset dir="${build}/compiled_gwt/${gwt.module.shortname}">
				<include name="**/*.*" />
			</fileset>
		</delete>
		
		<delete dir="${build.web.dir}"/>
		
	</target>
	
	
	<target name="clean-gwt" description="Clean the GWT build files from output directories">
		
		<!-- Delete the GWT compilation output -->
		<delete failonerror="false">
			<fileset dir="${build}/compiled_gwt/${gwt.module.shortname}">
				<include name="**/*.*" />
			</fileset>
		</delete>
		
		
		<echo message="deleting from ${build.web.dir}/splash" />
		<delete failonerror="false">	
			<fileset dir="${build.web.dir}/splash">
				<include name="**/*.gwt.rpc" />
				<include name="**/*.cache.html" />
				<include name="**/*.cache.png" />
			</fileset>	
		</delete>
		
	</target>
	
	
	<target name="codedrop" description="Copies source code and associated files to single directory">
		<echo message="Copying source to single directory" />

		<mkdir dir="${code.drop.dir}" />
		<mkdir dir="${code.drop.dir}/config" />
		<mkdir dir="${code.drop.dir}/src" />
		<mkdir dir="${code.drop.dir}/war" />
		
		<!-- Copy the build files -->
		<copy todir="${code.drop.dir}">
			<fileset dir="${project.basedir}">
				<include name="build.xml" />
				<include name="build.properties" />
			</fileset>
		</copy>
			
		<!-- Copy the config files -->
		<copy todir="${code.drop.dir}/config">
			<fileset dir="${src.config}">
				<include name="*.properties" />
			</fileset>
		</copy>
			
		<!-- Copy the Java source files -->
		<copy todir="${code.drop.dir}/src">
			<fileset dir="${src}">
				<include name="**/*.java" />
				<include name="**/*.png" />
				<include name="**/*.properties" />
			</fileset>
		</copy>
		
		<!-- Copy the host html page, CSS stylesheets and images -->
		<copy file="${src}/com/prelert/Splash.gwt.xml" todir="${code.drop.dir}/src/com/prelert"/>
		<copy todir="${code.drop.dir}/war">
			<fileset dir="${src.war}">
				<include name="Splash.html" />
				<include name="*.css" />
				<include name="*.ico" />
				<include name="*.jsp" />
			</fileset>
		</copy>
		<copy todir="${code.drop.dir}/war/css">
			<fileset dir="${src.war}/css"/>
		</copy>
		<copy todir="${code.drop.dir}/war/images">
			<fileset dir="${src.war}/images"/>
		</copy>

		
		<!-- Copy the web files -->
		<copy todir="${code.drop.dir}/war/WEB-INF">
			<fileset dir="${src.war}/WEB-INF">
				<include name="*.properties" />
				<include name="*.xml" />
			</fileset>
		</copy>
		
		<!-- Zip up the backup directory -->
		<delete file="${code.drop.dir}/splash2.zip"/>
		<zip destfile="${code.drop.dir}/splash2.zip" basedir="${code.drop.dir}" 
			excludes="multi_attribute_evidence/**" />
		
	</target>
	
	
</project>
