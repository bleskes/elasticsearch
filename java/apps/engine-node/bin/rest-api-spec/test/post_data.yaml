setup:
  - do:
      xpack.prelert.put_job:
        body:  >
          {
            "id":"farequote",
            "description":"Analysis of response time by airline",
            "analysisConfig" : {
                "bucketSpan":3600,
                "detectors" :[{"function":"metric","fieldName":"responsetime","byFieldName":"airline"}]
            },
            "dataDescription" : {
                "format":"JSON",
                "timeField":"time",
                "timeFormat":"epoch"
            }
          }

---
"Test POST data job api, flush, close and verify DataCounts doc":
  - do:
      xpack.prelert.post_data:
        jobId: farequote
        body: >
          {"airline":"AAL","responsetime":"132.2046","sourcetype":"farequote","time":"1403481600"}
          {"airline":"JZA","responsetime":"990.4628","sourcetype":"farequote","time":"1403481600"}

  - match: { processedRecordCount: 2 }
  - match: { processedFieldCount: 4}
  - match: { inputBytes: 177 }
  - match: { inputFieldCount: 6 }
  - match: { invalidDateCount: 0 }
  - match: { missingFieldCount: 0 }
  - match: { outOfOrderTimeStampCount: 0}
  - match: { failedTransformCount: 0}
  - match: { excludedRecordCount: 0}
  - match: { latestRecordTimeStamp: 1403481600000}
  - match: { bucketCount: 0}

  - do:
      xpack.prelert.flush_data:
        jobId: farequote
  - match: { acknowledged: true }

  - do:
      xpack.prelert.close_data:
        jobId: farequote
  - match: { acknowledged: true }

  - do:
    get:
      index: prelertresults-farequote
      type: dataCounts
      id: farequote-data-counts

  - match: { _source.processedRecordCount: 2 }
  - match: { _source.processedFieldCount: 4}
  - match: { _source.inputBytes: 177 }
  - match: { _source.inputFieldCount: 6 }
  - match: { _source.invalidDateCount: 0 }
  - match: { _source.missingFieldCount: 0 }
  - match: { _source.outOfOrderTimeStampCount: 0}
  - match: { _source.failedTransformCount: 0}
  - match: { _source.excludedRecordCount: 0}
  - match: { _source.latestRecordTimeStamp: 1403481600000}
  - match: { _source.bucketCount: 0}

---
"Test POST data with invalid parameters":
  - do:
      catch: /status_exception/
      xpack.prelert.post_data:
        jobId: foo
        resetStart: not_a_date
        body:  >
          {"airline":"AAL","responsetime":"132.2046","sourcetype":"farequote","time":"1403481600"}
          {"airline":"JZA","responsetime":"990.4628","sourcetype":"farequote","time":"1403481600"}

  - do:
      catch: /status_exception/
      xpack.prelert.post_data:
        jobId: foo
        resetEnd: end_not_a_date
        body:  >
          {"airline":"AAL","responsetime":"132.2046","sourcetype":"farequote","time":"1403481600"}
          {"airline":"JZA","responsetime":"990.4628","sourcetype":"farequote","time":"1403481600"}

---
"Test Flush data with invalid parameters":
  - do:
      catch: /status_exception/
      xpack.prelert.flush_data:
        jobId: foo
        start: not_a_date

  - do:
      catch: /status_exception/
      xpack.prelert.flush_data:
        jobId: foo
        end: end_not_a_date

  - do:
      catch: /status_exception/
      xpack.prelert.flush_data:
        jobId: foo
        advanceTime: advance_time_not_a_date
