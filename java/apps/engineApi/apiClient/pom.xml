<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

<!--
    Pom for building the Prelert Autodetect REST API client and associated
    integration tests.
    The client is mainly used for testing and as an example of how to use the API
-->

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.prelert</groupId>
    <artifactId>engineAPI</artifactId>
    <version>1.3.0</version>
  </parent>

  <groupId>com.prelert.client</groupId>
  <artifactId>prelertEngineApiClient</artifactId>
  <packaging>jar</packaging>

  <name>prelertEngineApiClient</name>
  <url>http://maven.apache.org</url>

  <dependencies>
    <!-- test jars -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpasyncclient</artifactId>
      <version>4.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore-nio</artifactId>
      <version>4.3.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.3.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.prelert</groupId>
      <artifactId>engine-api</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>


  <build>
    <!--
      Set the main and test output directories to the same directory so
      we can jar both the test classes and required classes together
    -->
    <outputDirectory>${project.build.directory}/classes</outputDirectory>
    <testOutputDirectory>${project.build.directory}/classes</testOutputDirectory>


    <plugins>
      <!-- Set main class in jar file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <manifest>
              <!-- <addClasspath>true</addClasspath> -->
              <mainClass>com.prelert.rs.client.JobsTest</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- install dependencies -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>install</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${env.PRELERT_HOME}/cots/libjar</outputDirectory>
              <overWriteReleases>true</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <!-- Don't copy test jars (JUnit) or provided -->
              <includeScope>runtime</includeScope>
              <excludeScope>provided</excludeScope>
            </configuration>
          </execution>

          <!-- install target jar -->
          <execution>
            <id>copy</id>
            <phase>install</phase>
            <goals>
              <goal>copy</goal>
            </goals>
           <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                  <type>${project.packaging}</type>
                  <outputDirectory>${env.PRELERT_HOME}/libjar</outputDirectory>
                </artifactItem>
              </artifactItems>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <!-- Include Source -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!-- JavaDoc -->
     <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>

        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <author>false</author>
          <show>public</show>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.5.4</version>
        <configuration>
          <threshold>High</threshold>
          <effort>Default</effort>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

</project>
