
# ------------------------------------------------------------------------------
# These settings relate to web server that serves Prelert's REST API

# TCP port to use
# jetty.port: 8080

# Directory for static (non-REST API) content
# jetty.home: cots/jetty

# ------------------------------------------------------------------------------
# These settings relate to scalability/resource usage limits

# Maximum number of anomaly records to be stored per bucket per job
# max.anomaly.records: 500

# Maximum number of active jobs per processor on the machine
# max.jobs.factor: 6.0

# How often to update usage statistics (in seconds)
# usage.update.interval: 300

# ------------------------------------------------------------------------------
# These settings relate to validation/rejection of suspect input

# Reject a data upload when this percentage of records have unparseable dates
# max.percent.date.errors: 25

# Reject a data upload when this percentage of records arrive with times outside
# the declared latency window
# max.percent.outoforder.errors: 25

# ------------------------------------------------------------------------------
# These settings relate to the behavior of the Engine API upon restarting

# Restart scheduled jobs that were not finished or stopped
# scheduler.autorestart: true

# Set ignoreDowntime to ONCE to all jobs that have no explicit setting
# ignore.downtime.on.startup: true

# ------------------------------------------------------------------------------
# These settings relate to the Elasticsearch that we're storing our results in

# Should we use the Elasticsearch Node Client (es-node) or Transport Client
# (es-transport) to connect to the Elasticsearch cluster that stores the results?
# Any other value means the most appropriate client will be automatically
# determined at run time, with the Node Client being preferred when the Engine
# API is being used with its bundled Elasticsearch and the Transport Client
# otherwise.
# results.storage.client: es-auto

# Elasticsearch cluster name
# es.cluster.name: prelert

# Which host is the Elasticsearch node we'll connect to running on?
# es.host: localhost

# HTTP port for Elasticsearch's REST API
# es.http.port: 9200

# TCP port range for Elasticsearch's transport protocol
# es.transport.tcp.port: 9300-9400

# Only relevant when using the Elasticsearch Node Client, this sets the network
# interface through which the embedded node will publish updates.  It must be
# set to the IP address of a non-loopback network interface if the Node Client
# is to be used to connect to a remote cluster.
# es.network.publish_host: 127.0.0.1

# Override determination of the number of processors on the machine (for the
# purpose of deciding thread pool sizes.  Leave blank for automatic
# determination or set to a specific number.
# es.processors: ""

# How many replicas should each Prelert results index have?  This should be set
# to a number lower than the number of nodes in the Elasticsearch cluster
# storing the Prelert results.
# es.index.number_of_replicas: 0

