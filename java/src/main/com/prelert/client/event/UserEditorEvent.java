/************************************************************
 *                                                          *
 * Contents of file Copyright (c) Prelert Ltd 2006-2012     *
 *                                                          *
 *----------------------------------------------------------*
 *----------------------------------------------------------*
 * WARNING:                                                 *
 * THIS FILE CONTAINS UNPUBLISHED PROPRIETARY               *
 * SOURCE CODE WHICH IS THE PROPERTY OF PRELERT LTD AND     *
 * PARENT OR SUBSIDIARY COMPANIES.                          *
 * PLEASE READ THE FOLLOWING AND TAKE CAREFUL NOTE:         *
 *                                                          *
 * This source code is confidential and any person who      *
 * receives a copy of it, or believes that they are viewing *
 * it without permission is asked to notify Prelert Ltd     *
 * on +44 (0)20 3567 1249 or email to legal@prelert.com.    *
 * All intellectual property rights in this source code     *
 * are owned by Prelert Ltd.  No part of this source code   *
 * may be reproduced, adapted or transmitted in any form or *
 * by any means, electronic, mechanical, photocopying,      *
 * recording or otherwise.                                  *
 *                                                          *
 *----------------------------------------------------------*
 *                                                          *
 *                                                          *
 ***********************************************************/

package com.prelert.client.event;

import com.extjs.gxt.ui.client.event.ComponentEvent;
import com.prelert.client.admin.UserEditor;
import com.prelert.data.gxt.UserModel;


/**
 * An event generated by the User Editor, such as to indicate that an edit has
 * been completed, or editing of a user has been cancelled.
 * @author Pete Harverson
 */
public class UserEditorEvent extends ComponentEvent
{
	private UserModel	m_StartData;
	private UserModel	m_UserData;

	
	/**
	 * Creates a new UserEditorEvent.
	 * @param userEditor the User Editor that is the source of the event.
	 */
	public UserEditorEvent(UserEditor userEditor)
    {
	    super(userEditor);
    }
	
	
	/**
	 * Sets the user data as stored in the User Editor at the start of an edit.
	 * @param startData the starting user data.
	 */
	public void setStartData(UserModel startData)
	{
		m_StartData = startData;
	}
	
	
	/**
	 * Returns the user data that was set in the User Editor at the start of the edit.
	 * @return the starting user data.
	 */
	public UserModel getStartData()
	{
		return m_StartData;
	}
	
	
	/**
	 * Sets the user data as stored in the User Editor when the event was fired.
	 * @param user the user data when the event was fired.
	 */
	public void setUserData(UserModel user)
	{
		m_UserData = user;
	}
	
	
	/**
	 * Returns the user data set in the User Editor when the event was fired.
	 * @return the user data when the event was fired.
	 */
	public UserModel getUserData()
	{
		return m_UserData;
	}

}
