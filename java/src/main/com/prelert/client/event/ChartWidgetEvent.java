/************************************************************
 *                                                          *
 * Contents of file Copyright (c) Prelert Ltd 2006-2012     *
 *                                                          *
 *----------------------------------------------------------*
 *----------------------------------------------------------*
 * WARNING:                                                 *
 * THIS FILE CONTAINS UNPUBLISHED PROPRIETARY               *
 * SOURCE CODE WHICH IS THE PROPERTY OF PRELERT LTD AND     *
 * PARENT OR SUBSIDIARY COMPANIES.                          *
 * PLEASE READ THE FOLLOWING AND TAKE CAREFUL NOTE:         *
 *                                                          *
 * This source code is confidential and any person who      *
 * receives a copy of it, or believes that they are viewing *
 * it without permission is asked to notify Prelert Ltd     *
 * on +44 (0)20 3567 1249 or email to legal@prelert.com.    *
 * All intellectual property rights in this source code     *
 * are owned by Prelert Ltd.  No part of this source code   *
 * may be reproduced, adapted or transmitted in any form or *
 * by any means, electronic, mechanical, photocopying,      *
 * recording or otherwise.                                  *
 *                                                          *
 *----------------------------------------------------------*
 *                                                          *
 *                                                          *
 ***********************************************************/

package com.prelert.client.event;

import com.extjs.gxt.ui.client.event.BaseEvent;
import com.extjs.gxt.ui.client.event.EventType;
import com.prelert.client.chart.ChartWidget;


/**
 * An event generated by a chart widget.
 * 
 * @param <M> any data associated with the event e.g. TimeSeriesConfig.
 * @author Pete Harverson
 */
public class ChartWidgetEvent<M> extends BaseEvent
{
	private M 	m_Model;
	
	/**
	 * Creates a new <code>ChartWidgetEvent</code>.
	 * @param chart the chart widget that has generated the event.
	 * @param eventType the type of the event generated by the chart widget.
	 */
	public ChartWidgetEvent(ChartWidget<?> chart, EventType eventType)
	{
		super(chart);
		this.setType(eventType);
	}
	
	
	/**
	 * Returns the chart widget that generated the event.
	 * @return the chart widget that has generated the event.
	 */
	public ChartWidget<?> getChartWidget()
	{
		return (ChartWidget<?>)getSource();
	}
	
	
	/**
	 * Returns model data, if any, associated with the chart widget event.
	 * @return model data associated with the event e.g. data added or removed
	 * 	from the chart.
	 */
	public M getModel()
	{
		return m_Model;
	}
	
	
	/**
	 * Sets model data associated with the chart widget event e.g. data
	 * added or removed from the chart.
	 * @param model model data associated with the event.
	 */
	public void setModel(M model)
	{
		m_Model = model;
	}

}
