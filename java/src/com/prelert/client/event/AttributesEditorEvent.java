/************************************************************
 *                                                          *
 * Contents of file Copyright (c) Prelert Ltd 2006-2012     *
 *                                                          *
 *----------------------------------------------------------*
 *----------------------------------------------------------*
 * WARNING:                                                 *
 * THIS FILE CONTAINS UNPUBLISHED PROPRIETARY               *
 * SOURCE CODE WHICH IS THE PROPERTY OF PRELERT LTD AND     *
 * PARENT OR SUBSIDIARY COMPANIES.                          *
 * PLEASE READ THE FOLLOWING AND TAKE CAREFUL NOTE:         *
 *                                                          *
 * This source code is confidential and any person who      *
 * receives a copy of it, or believes that they are viewing *
 * it without permission is asked to notify Prelert Ltd     *
 * on +44 (0)20 7953 7243 or email to legal@prelert.com.    *
 * All intellectual property rights in this source code     *
 * are owned by Prelert Ltd.  No part of this source code   *
 * may be reproduced, adapted or transmitted in any form or *
 * by any means, electronic, mechanical, photocopying,      *
 * recording or otherwise.                                  *
 *                                                          *
 *----------------------------------------------------------*
 *                                                          *
 *                                                          *
 ***********************************************************/

package com.prelert.client.event;

import java.util.List;

import com.extjs.gxt.ui.client.event.ComponentEvent;

import com.prelert.data.gxt.AttributeModel;
import com.prelert.splash.AttributesEditor;


/**
 * An event generated by the Attributes Editor, such as to indicate that the apply
 * button has been pressed to submit changes.
 * @author Pete Harverson
 */
public class AttributesEditorEvent extends ComponentEvent
{
	private List<AttributeModel>	m_OldAttributes;
	private List<AttributeModel>	m_Attributes;
	
	
	/**
	 * Creates a new AttributesEditorEvent.
	 * @param attributeEditor the Attributes Editor that is the source of the event.
	 */
	public AttributesEditorEvent(AttributesEditor attributeEditor)
	{
		super(attributeEditor);
	}
	
	
	/**
	 * Returns the old list of attributes that were stored in the Attributes Editor 
	 * before any changes were made.
	 * @return the old list of attributes.
	 */
	public List<AttributeModel> getOldAttributes()
	{
		return m_OldAttributes;
	}
	
	
	/**
	 * Sets the old list of attributes that were stored in the Attributes Editor 
	 * before any changes were made.
	 * @param oldAttributes the old list of attributes.
	 */
	public void setOldAttributes(List<AttributeModel> oldAttributes)
	{
		m_OldAttributes = oldAttributes;
	}
	
	
	/**
	 * Returns the attributes selected in the Attributes Editor when the event was fired.
	 * @return the list of selected attributes.
	 */
	public List<AttributeModel> getAttributes()
	{
		return m_Attributes;
	}
	
	
	/**
	 * Sets the attributes selected in the Attributes Editor when the event was fired. 
	 * @param attributes the list of selected attributes.
	 */
	public void setAttributes(List<AttributeModel> attributes)
	{
		m_Attributes = attributes;
	}
}
