<?xml version="1.0" encoding="UTF-8"?>
<project name="Generate appropriate BuildInfo.java" default="build" basedir=".">
	<description>
		Generate BuildInfo.java from the appropriate template
	</description>

	<property environment="env" />

	<!-- Set global properties for this build -->
	<property name="src" location="${basedir}/src" />
	<property name="git.basedir" location="${basedir}/.." />
	<property name="buildinfo.location" location="${src}/com/prelert/data" />
	<property name="buildinfo.target" value="BuildInfo.java" />

	<condition property="build.number" value="${env.PRELERT_BUILD_NUM}">
		<isset property="env.PRELERT_BUILD_NUM" />
	</condition>

	<condition property="buildinfo.template" value="BuildInfo.java.tagged_template">
		<isset property="build.number" />
	</condition>

	<condition property="buildinfo.template" value="BuildInfo.java.dev_template">
		<not>
			<isset property="build.number" />
		</not>
	</condition>

	<condition property="build.number" value="0">
		<not>
			<isset property="env.PRELERT_BUILD_NUM" />
		</not>
	</condition>

	<!-- Read in version properties -->
	<property file="${git.basedir}/version.properties" />

	<fail message="Could read version from Prelert version.properties file">
		<condition>
			<not>
				<and>
					<isset property="version.major" />
					<isset property="version.minor" />
					<isset property="version.revision" />
				</and>
			</not>
		</condition>
	</fail>

	<target name="build" description="Generate BuildInfo.java">
		<echo message="Generating BuildInfo.java" />

		<!-- Get the current year -->
		<tstamp>
			<format property="build.year" pattern="yyyy" />
		</tstamp>

		<echo message="Using template ${buildinfo.template}" />

		<tempfile property="buildinfo.temp" prefix="BuildInfo." suffix=".i" destDir="${buildinfo.location}"/>

		<!-- Copy the appropriate template, substituting the variables -->
		<copy file="${buildinfo.location}/${buildinfo.template}" tofile="${buildinfo.temp}">
			<filterset>
				<filter token="build.year" value="${build.year}"/>
				<filter token="user.name" value="${user.name}"/>
				<filter token="version.number" value="${version.major}.${version.minor}.${version.revision}"/>
				<filter token="build.number" value="${build.number}"/>
				<filter token="warning.comment" value="DO NOT EDIT THIS FILE - instead edit BOTH templates"/>
			</filterset>
		</copy>

		<!-- To improve robustness with parallel builds, only move the new build
			info file if it's different to the current one; otherwise simply
			delete the temporary file -->
		<condition property="buildinfo.uptodate" value="true">
			<filesmatch file1="${buildinfo.temp}" file2="${buildinfo.location}/${buildinfo.target}"/>
		</condition>
		<antcall target="movetemp" />
		<antcall target="deletetemp" />

	</target>

	<target name="movetemp" description="Move temporary build info to the correct file name" unless="buildinfo.uptodate">
		<move file="${buildinfo.temp}" tofile="${buildinfo.location}/${buildinfo.target}" verbose="true" />
	</target>

	<target name="deletetemp" description="Delete temporary build info file" if="buildinfo.uptodate">
		<delete file="${buildinfo.temp}" quiet="true" />
	</target>

</project>
